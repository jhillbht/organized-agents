@echo off
setlocal enabledelayedexpansion

REM Organized AI Quickstart Script for Windows
REM This script sets up and runs Organized AI with minimal user input

echo.
echo ================================================
echo      ___                       _              
echo     / _ \ _ __ __ _  __ _ _ __(_)_______  __| 
echo    ^| ^| ^| ^| '__/ _` ^|/ _` ^| '_ \^| ^|_  / _ \/ _` 
echo    ^| ^|_^| ^| ^| ^| (_^| ^| (_^| ^| ^| ^| ^| ^|/ /  __/ (_^| 
echo     \___/^|_^|  \__, ^|\__,_^|_^| ^|_^|_/___\___^|\__,_^|
echo               ^|___/                            
echo               AI Agent Orchestration           
echo ================================================
echo.
echo Welcome to Organized AI Quickstart for Windows!
echo This script will set up everything you need.
echo.

REM Check for Git
where git >nul 2>nul
if %errorlevel%==0 (
    echo [OK] Git is installed
) else (
    echo [ERROR] Git is not installed
    echo Please install Git from: https://git-scm.com/download/win
    pause
    exit /b 1
)

REM Check for Rust
where rustc >nul 2>nul
if %errorlevel%==0 (
    echo [OK] Rust is installed
) else (
    echo [WARNING] Rust is not installed
    echo.
    echo Installing Rust...
    echo Please follow the prompts in the installer
    start https://win.rustup.rs/
    echo.
    echo After installing Rust, please restart this script
    pause
    exit /b 1
)

REM Check for Node.js or Bun
set PACKAGE_MANAGER=
where bun >nul 2>nul
if %errorlevel%==0 (
    set PACKAGE_MANAGER=bun
    echo [OK] Bun is installed
) else (
    where node >nul 2>nul
    if %errorlevel%==0 (
        set PACKAGE_MANAGER=npm
        echo [OK] Node.js is installed
        echo.
        echo Note: Bun is recommended for better performance
        echo Install from: https://bun.sh
    ) else (
        echo [ERROR] Neither Node.js nor Bun is installed
        echo.
        echo Please install one of the following:
        echo - Bun (recommended): https://bun.sh
        echo - Node.js: https://nodejs.org/
        pause
        exit /b 1
    )
)

REM Check for Claude Code CLI (optional)
where claude >nul 2>nul
if %errorlevel%==0 (
    echo [OK] Claude Code CLI is installed
) else (
    echo [INFO] Claude Code CLI not found (optional)
    echo Install from: https://github.com/anthropics/claude-code
)

echo.
echo Installing Organized AI...
echo.

REM Install dependencies
echo Installing dependencies with %PACKAGE_MANAGER%...
if "%PACKAGE_MANAGER%"=="bun" (
    call bun install
) else (
    call npm install
)

REM Create .env file if it doesn't exist
if not exist .env (
    echo Creating .env file...
    (
        echo # Organized AI Environment Configuration
        echo # Generated by quickstart.bat
        echo.
        echo # Required: Your Anthropic API key
        echo ANTHROPIC_API_KEY=
        echo.
        echo # Optional: Additional API keys
        echo # OPENAI_API_KEY=
        echo # GOOGLE_API_KEY=
        echo.
        echo # Optional: Custom data directory
        echo # ORGANIZED_AI_DATA_DIR=~/.organized-ai
    ) > .env
    echo.
    echo [WARNING] .env file created. Please add your API keys!
)

REM Check if API key is set
findstr /r "ANTHROPIC_API_KEY=." .env >nul
if %errorlevel% neq 0 (
    echo.
    echo [ERROR] ANTHROPIC_API_KEY is not set in .env file
    echo Please edit .env and add your Anthropic API key
    echo.
    set /p add_key="Would you like to add it now? (y/n): "
    if /i "!add_key!"=="y" (
        set /p api_key="Enter your Anthropic API key: "
        powershell -Command "(Get-Content .env) -replace 'ANTHROPIC_API_KEY=.*', 'ANTHROPIC_API_KEY=!api_key!' | Set-Content .env"
        echo [OK] API key saved to .env
    ) else (
        echo Please add your API key to .env before running the app
        pause
        exit /b 1
    )
)

echo.
echo Setup complete! 
echo.
echo Choose an option:
echo 1) Run in development mode (recommended for first time)
echo 2) Build for production
echo 3) Exit
echo.
set /p choice="Enter your choice (1-3): "

if "%choice%"=="1" (
    echo.
    echo Starting Organized AI in development mode...
    echo.
    echo The app will open in a new window shortly...
    echo Press Ctrl+C to stop the development server
    echo.
    if "%PACKAGE_MANAGER%"=="bun" (
        call bun run tauri dev
    ) else (
        call npm run tauri:dev
    )
) else if "%choice%"=="2" (
    echo.
    echo Building Organized AI for production...
    echo This may take several minutes...
    if "%PACKAGE_MANAGER%"=="bun" (
        call bun run tauri build
    ) else (
        call npm run tauri:build
    )
    echo.
    echo [OK] Build complete!
    echo The app is located in: src-tauri\target\release\
) else if "%choice%"=="3" (
    echo Setup complete. Run 'bun run tauri dev' to start the app.
) else (
    echo [ERROR] Invalid choice
    pause
    exit /b 1
)

pause